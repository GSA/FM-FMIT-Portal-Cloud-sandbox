// Outputs properties based on contents of text()

$text-utililies: (
  font-style: map-collect(
    map-deep-get($uswds-properties, font-style, standard),
    map-deep-get($uswds-properties, font-style, extended)
  ),
  font-weight: map-collect(
    map-deep-get($uswds-properties, font-weight, standard),
    map-deep-get($uswds-properties, font-weight, extended)
  ),
  letter-spacing: map-collect(
    map-deep-get($uswds-properties, letter-spacing, standard),
    map-deep-get($uswds-properties, letter-spacing, extended)
  ),
  text-align: map-collect(
    map-deep-get($uswds-properties, text-align, standard),
    map-deep-get($uswds-properties, text-align, extended)
  ),
  text-decoration: map-collect(
    map-deep-get($uswds-properties, text-decoration, standard),
    map-deep-get($uswds-properties, text-decoration, extended)
  ),
  text-transform: map-collect(
    map-deep-get($uswds-properties, text-transform, standard),
    map-deep-get($uswds-properties, text-transform, extended)
  ),
  vertical-align: map-collect(
    map-deep-get($uswds-properties, vertical-align, standard),
    map-deep-get($uswds-properties, vertical-align, extended)
  ),
  white-space: map-collect(
    map-deep-get($uswds-properties, white-space, standard),
    map-deep-get($uswds-properties, white-space, extended)
  ),
);

@mixin u-text($value...) {
  $important: null;
  @if has-important($value) {
    $value: remove($value, '!important');
    $important: ' !important';
  }
  @each $this-value in $value {
    $match: false;
    @if type-of($this-value) == 'color' {
      $match: true;
      color: $this-value#{$important};
    }
    @else {
      $this-value: smart-quote($this-value);
      @each $property, $map in $text-utililies {
        @if not $match and map-has-key($map, $this-value){
          #{$property}: get-uswds-value($property, $this-value...)#{$important};
          $match: true;
        }
      }
    }
    @if not $match {
      @error "`#{$this-value}` is not a valid `text` value.";
    }
  }
}
